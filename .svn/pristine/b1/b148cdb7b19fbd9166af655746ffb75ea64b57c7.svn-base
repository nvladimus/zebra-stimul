<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>48, 16</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>43</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEACACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAaGhoAGhodABkZIQAbGxsAGxscABkZJAAaGiEAGRknABwcHAAdHR0AHh4eAB8fHwAfHyAAICAgABkZ
        OwAhISEAEhJgABISZgAkJCQAIiIsACIiLwAhITMAIyMsACMjLgAQEHcAJiYmABcXXgAkJC4AISE6ACQk
        LwAnJycAJSUvACEhPwAgIEQAICBFACgoKAAhIUIADQ2PACAgSQApKSkAJCQ8ACcnMgAgIEwAISFKAB4e
        VgAfH1MAICBQACgoMwAbG2YAERGMACkpNAAVFYEADg6bACwsLAAqKjQAFBSGABMTigAYGHgAExOLAA4O
        ngAJCbEAERGUABAQmAAtLS0AFhaDAAoKsAAICLkALi4uAC8vLwAGBsgAMDAwAAUF0AAGBs0ABQXTAAQE
        2AAFBdUABATbADAwOQADA+AABATeAAQE4AACAuoAAwPpADQ0NAAyMjwANDQ1AAEB8gABAfQAAQH1ADU1
        NQABAfYAFRWsAAEB9wABAfgAAAD8AAEB+QAAAP0AAQH6AAEB+wAAAP8AFBTCADo6OgAHB/8APDw8AD09
        PQATE+IAIyOnAD09SABAQEAAQEBDAEFBQQBCQkIAQ0NDAERERABCQk0ARkZGAEdHRwBISEgAOzt6AElJ
        SQBHR1IAS0tLAExMTABLS1UAJSXiACQk6gBNTVgAUVFRAFJSUgBRUVoAJSX9AFNTUwBUVFQAUlJdACcn
        /wBVVVUAVlZWAFRUXwBXV1cAMTHnAFdXXgBZWVkAV1diAFpaWgAvL/8AXFxcAFpaZQBbW2QAXV1dADg4
        6ABfX18AYWFhAGFhbABkZGQAX193AGVlZQBkZG0AZmZmAGpqagBra2sARkb8AG1tbQBtbXUATU3tAG5u
        eABycnIAcHB9AE5O/QBzc4IAdnaGAFdX/wB9fX0AfX2EAH9/fwBdXf8Afn6KAH9/iwBmZugAgoKCAICA
        jACCgocAgoKMAGpq8QCIiJgAkJCaAJOTmACXl5oAmpqaAJ2dnwCfn58AoaGhAKKiogCfn7MApKSmAKam
        qACnp6gAqqqqAKysrQCurq8As7O0ALi4uQC6uroAvLy8AL+/vwDGxsYAx8fHANXV1QDg4OAA4+PjAOXl
        5QDn5+cA6OjoAOnp6QDq6uoA6+vrAO7u7gDw8PAA8fHxAPPz8wD5+fkA/f39AP7+/gD///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6enp6/nZ2dnZ2d
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ29nZ2dnZ2dnZ2dnZ2dnZ2dnZ2d
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ29nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2d
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ29nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2d
        nZ2dnZ29nZ2dnZ2dnaVxnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dh4CfnZ2dnZ29nZ2dnZ2d
        vdh1bp2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2NGcrRrZ2dnZ29nZ2dnaHM3t7ZaHOdnZ2dnZ2d
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZQnxN7e276dnZ29oIKCfJrZ3t7e1E1qgoKCgoKCgoKCgoKCgoKCgoKC
        goKCgoKCfSi63t7e3sV2goKnhmNjXDMyyd7e3s8vQmNjY2NjY2NjY2NjY2NjY2NjY2NjY2NXJrTe3t7S
        hStKY2OQhmNjY2NIIJjX3t7OHUVjY2NjY2NjY2NjY2NjY2NjY2NjY2Esot7e3sEbPV5jY2OQhmNjY2Nj
        Xzcpx97ezRRLY2NjY2NjY2NjY2NjY2NjY2NjYDCT3N7QfipMY2NjY2OQhmNjY2NjY2NHJJLW3sgVTmNj
        Y2NjY2NjY2NjY2NjY2NjOXvb3bwXPmBjY2NjY2OQhmNjY2NjY2NjYTgfxt7CHFFjY2NjY2NjY2NjY2Nj
        Y2M6a9rPeC5PY2NjY2NjY2OQhmNjY2NjY2NjY2NJIYnTuSJWY2NjY2NjY2NjY2NjYztU1boTNGBjY2Nj
        Y2NjY2OQhmNjY2NjY2NjY2NjYjEWw6wtXWNjY2NjY2NjY2NjQTbLci1QY2NjY2NjY2NjY2OQtbOzs7Oz
        s7Ozs7Ozs7OkVYSEba+zs7Ozs7Ozs7OcI6EejLCzs7Ozs7Ozs7Ozs7PAnZ2dnZ2dnZ2dnZ2dnZ2dmXAS
        A2idnZ2dnZ2dnYgNCVORnZ2dnZ2dnZ2dnZ2dnZ27nZ2dnZ2dnZ2dnZ2dnZ2dnZ2NRgBvnZ2dnZ2djxIP
        d52dnZ2dnZ2dnZ2dnZ2dnZ27nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dm3EJeZ2dnZ2bI1mUnZ2dnZ2dnZ2dnZ2d
        nZ2dnZ27nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2Pl52dnZ2dkZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ27nZ2dnZ2d
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ27nZ2dnZ2dnZ2dnZ2dnZ2dnZ2d
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ27nZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2d
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ27saOjo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Oj
        o6Ojo6O2kGNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2OGkGNjY2Nj
        Y2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2OGkGNjY2NjY2NjY2NjY2NjY2Nj
        Y2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2OGkGNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2Nj
        Y2NjY2NjY2NjY2NjY2NjY2OGkGNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2Nj
        Y2NjY2OGkGNjY2NjY2NjY2NjY2NjY2NjY2NjWmNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2OGlWlpaWlp
        aWlpaWlpaWlpaWlpaWkaBltpaWlADmRpaWlpaWlpaWlpaWlpaWlpaWmLqJ2dnZ2dnZ2dnZ2dnZ2dnZ2d
        nYoJABmdnY8JAD+dnZ2dnZ2dnZ2dnZ2dnZ2dnZ2msp2dnZ2dnZ2dnZ2dnZ2dnZ2dnXQIAAObnXMJAAib
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ2rsp2dnZ2dnZ2dnZ2dnZ2dnZ2dnWUAAAqRnWUAAAmUnZ2dnZ2dnZ2dnZ2d
        nZ2dnZ2rsp2dnZ2dnZ2dnZ2dnZ2dnZ2dnTUAAAt/nUMAAAqDnZ2dnZ2dnZ2dnZ2dnZ2dnZ2rsp2dnZ2d
        nZ2dnZ2dnZ2dnZ2dnSMAAAt6nRkAAAt5nZ2dnZ2dnZ2dnZ2dnZ2dnZ2rsp2dnZ2dnZ2dnZ2dnZ2dnZ2d
        nVMAAAuInUQAAAqEnZ2dnZ2dnZ2dnZ2dnZ2dnZ2rsp2dnZ2dnZ2dnZ2dnZ2dnZ2dnWwDAAmXnWcAAAmW
        nZ2dnZ2dnZ2dnZ2dnZ2dnZ2ruKmpqampqampqampqampqampqY4MAAqpqYEKAASpqampqampqampqamp
        qampqam3qmNjY2NjY2NjY2NjY2NjY2NjY1cHAhhjY1IFARFjY2NjY2NjY2NjY2NjY2NjY2NjqmNjY2Nj
        Y2NjY2NjY2NjY2NjY2NJJVhjY2M8EFJjY2NjY2NjY2NjY2NjY2NjY2NjqmNjY2NjY2NjY2NjY2NjY2Nj
        Y2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjqmNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2Nj
        Y2NjY2NjY2NjY2NjY2NjY2NjqmNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2Nj
        Y2NjY2NjqmNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjqmNjY2Nj
        Y2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjrmZmZmZmZmZmZmZmZmZmZmZm
        ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>